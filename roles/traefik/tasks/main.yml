---
- name: traefik - ensure docker network
  become: yes
  docker_network:
    name: traefik
    attachable: yes
- name: traefik - remember compose definition
  set_fact:
    traefik_definition:
      version: '3'
      networks:
        traefik:
          external: true
      services:
        reverse-proxy:
          image: traefik 
          network_mode: 'host'
          command:
            #- "--log.level=DEBUG"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.network=traefik"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.https.address=:443"
            - "--api.dashboard=true"
            # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
            - "--entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22"
          
            - "--certificatesResolvers.cloudflare.acme.email=$CLOUDFLARE_EMAIL"
            - "--certificatesResolvers.cloudflare.acme.storage=/acme.json"
            - "--certificatesResolvers.cloudflare.acme.dnsChallenge.provider=cloudflare"
            - "--certificatesResolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
            - "--certificatesResolvers.cloudflare.acme.dnsChallenge.delayBeforeCheck=90"
            
            - "--entrypoints.https.http.tls.certresolver=cloudflare"
            - "--entrypoints.https.http.tls.domains[0].main=$DOMAINNAME0"
            - "--entrypoints.https.http.tls.domains[0].sans=*.$DOMAINNAME0"

          environment:
            - CF_API_EMAIL={{cf.api.email}}
            - CF_API_KEY={{cf.api.key}}
            - CF_DNS_API_TOKEN={{cf.dns_token}}
            - CF_ZONE_API_TOKEN={{cf.zone_token}}

          labels:
            traefik.enable: true
            traefik.docker.network: traefik
            
            traefik.http.routers.dashboard.entrypoints: 'web'
            traefik.http.routers.dashbaord.rule: 'Host(`traefik.alanp.me`)'
            traefik.http.routers.dashboard.service: 'dashboard'
            traefik.http.services.dashboard.loadbalancer.server.port: '8080'
            traefik.http.middlewares.dashboard-auth.basicauth.users: "test:{{ 'test' | password_hash('bcrypt') | replace('$', '$$') }}"
            #traefik.http.middlewares.dashboard-auth.basicauth.users: "{{traefik.username}}:{{ traefik.password | password_hash('bcrypt') | replace('$', '$$') }}"
            traefik.http.routers.dashboard.middlewares: 'dashboard-auth@docker'
          volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

- name: traefik - start compose
  docker_compose:
    project_name: traefik
    recreate: always
    restarted: yes
    remove_orphans: yes
    state: present
    definition: '{{traefik_definition}}'
